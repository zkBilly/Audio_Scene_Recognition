clear all
     % MFCC implement with Matlab %  
    [x,fs]=audioread('filename'); 
    x=x(:,1);
    win=0.04*fs;inc=0.04*0.5*fs;nfft=2^11;
    bank=melbankm(24,nfft,fs,0,0.4,'t'); %Mel滤波器的阶数为24，FFT变换的长度为256，采样频率为fs
    %归一化Mel滤波器组系数  
    bank=full(bank); %full() convert sparse matrix to full matrix  
    bank=bank/max(bank(:));  
    for k=1:12  
        n=0:23;  
        dctcoef(k,:)=cos((2*n+1)*k*pi/(2*24));  
    end  
    w=1+6*sin(pi*[1:12]./12);%归一化倒谱提升窗口  
    w=w/max(w);%预加重滤波器  
    xx=double(x);  
    xx=filter([1-0.9375],1,xx);%语音信号分帧  
    xx=enframe(xx,win,inc);%对xx 256点分为一帧  
    %计算每帧的MFCC参数  
    for i=1:size(xx,1)  
        y=xx(i,:);  
        s=y'.*hamming(win);  
        t=abs(fft(s));%FFT快速傅里叶变换  
        t=t.^2;  
        a=log(bank*t(1:(nfft/2+1)));
        c1=dctcoef*a;  
        c2=c1.*w';  
        m(i,:)=c2;
        sm(i)=i;
    end  
    %求一阶差分系数  
    dtm=zeros(size(m));  
    for i=3:size(m,1)-2  
        dtm(i,:)=-2*m(i-2,:)-m(i-1,:)+m(i+1,:)+2*m(i+2,:);  
    end  
    dtm=dtm/3;  
    %求取二阶差分系数  
    dtmm=zeros(size(dtm));  
    for i=3:size(dtm,1)-2  
        dtmm(i,:)=-2*dtm(i-2,:)-dtm(i-1,:)+dtm(i+1,:)+2*dtm(i+2,:);  
    end  
    dtmm=dtmm/3;  
    %合并mfcc参数和一阶差分mfcc参数  
    ccc=[m dtm dtmm]; 
    %去除首尾两帧，因为这两帧的一阶差分参数为0  
    ccc=ccc(3:size(m,1)-2,:);
    ccc_1=ccc(:,1);
    ccc_n=ccc_1;
    for i=2:36
        ccc_n=[ccc_n
                   ccc(:,i)];
    end
    
    time=(0:size(x)-1)/fs;                  % 计算时间坐标
    fn=size(xx,1);
    frameTime=frame2time(fn,win,inc,fs);  % 求出每帧对应的时间
    frameTime=frameTime(:,3:size(m,1)-2);
    
    % 作图
    figure(1); 
    plot(time,x); grid on;
    title('音乐波形');
    xlabel('时间/s');ylabel('幅值'); 
    axis([0,time(1,size(time,2)),-inf,inf]);

    figure(2);  
    mesh(frameTime,[1:size(ccc,2)],ccc');grid on;
    title('MFCC');xlabel("时间/s");ylabel('阶数'); zlabel("幅度");
    axis([0,frameTime(1,size(frameTime,2)),1,36,-inf,inf]);
    set(gca,'ytick',1:1:36);
    
    figure(3);
    plot(frameTime,ccc_1);grid on;
    title("MFCC一阶参数");xlabel("时间/s");ylabel("幅度");
    axis([0,frameTime(1,size(frameTime,2)),-inf,inf]);
